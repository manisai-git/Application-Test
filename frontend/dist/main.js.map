{"version":3,"sources":["./src/app/disabled-form.ts","./src/app/material-module.ts","./src/app/mat-paginator-goto/mat-paginator-goto.component.ts","./src/app/mat-paginator-goto/mat-paginator-goto.component.html","./src/app/table-basic-example/table-basic-example.component.ts","./src/app/table-basic-example/table-basic-example.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Directive, Input } from '@angular/core';\r\nimport { NgControl } from '@angular/forms';\r\n\r\n@Directive({\r\n  selector: '[disableControl]'\r\n})\r\nexport class DisableControlDirective {\r\n\r\n constructor( private ngControl : NgControl ) {\r\n  }\r\n\r\n  @Input() set disableControl( condition : boolean ) {\r\n    const action = condition ? 'disable' : 'enable';\r\n    this.ngControl.control[action]();\r\n    // this.ngControl.control[action]();\r\n  }\r\n\r\n \r\n\r\n}","import {NgModule} from '@angular/core';\r\nimport {A11yModule} from '@angular/cdk/a11y';\r\nimport {ClipboardModule} from '@angular/cdk/clipboard';\r\nimport {DragDropModule} from '@angular/cdk/drag-drop';\r\nimport {PortalModule} from '@angular/cdk/portal';\r\nimport {ScrollingModule} from '@angular/cdk/scrolling';\r\nimport {CdkStepperModule} from '@angular/cdk/stepper';\r\nimport {CdkTableModule} from '@angular/cdk/table';\r\nimport {CdkTreeModule} from '@angular/cdk/tree';\r\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\r\nimport {MatBadgeModule} from '@angular/material/badge';\r\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\nimport {MatChipsModule} from '@angular/material/chips';\r\nimport {MatStepperModule} from '@angular/material/stepper';\r\nimport {MatDatepickerModule} from '@angular/material/datepicker';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {MatDividerModule} from '@angular/material/divider';\r\nimport {MatExpansionModule} from '@angular/material/expansion';\r\nimport {MatGridListModule} from '@angular/material/grid-list';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatListModule} from '@angular/material/list';\r\nimport {MatMenuModule} from '@angular/material/menu';\r\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material/core';\r\nimport {MatPaginatorModule} from '@angular/material/paginator';\r\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\nimport {MatRadioModule} from '@angular/material/radio';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {MatSidenavModule} from '@angular/material/sidenav';\r\nimport {MatSliderModule} from '@angular/material/slider';\r\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\r\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\r\nimport {MatSortModule} from '@angular/material/sort';\r\nimport {MatTableModule} from '@angular/material/table';\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\nimport {MatTooltipModule} from '@angular/material/tooltip';\r\nimport {MatTreeModule} from '@angular/material/tree';\r\nimport {OverlayModule} from '@angular/cdk/overlay';\r\n\r\n@NgModule({\r\n  exports: [\r\n    A11yModule,\r\n    ClipboardModule,\r\n    CdkStepperModule,\r\n    CdkTableModule,\r\n    CdkTreeModule,\r\n    DragDropModule,\r\n    MatAutocompleteModule,\r\n    MatBadgeModule,\r\n    MatBottomSheetModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatStepperModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatDividerModule,\r\n    MatExpansionModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatNativeDateModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    MatRippleModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatSnackBarModule,\r\n    MatSortModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n    MatTreeModule,\r\n    OverlayModule,\r\n    PortalModule,\r\n    ScrollingModule,\r\n  ]\r\n})\r\nexport class DemoMaterialModule {}\r\n\r\n\r\n/**  Copyright 2020 Google LLC. All Rights Reserved.\r\n    Use of this source code is governed by an MIT-style license that\r\n    can be found in the LICENSE file at http://angular.io/license */","import {\r\n  Component,\r\n  OnInit,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  ViewChild\r\n} from \"@angular/core\";\r\nimport { MatPaginator, PageEvent } from \"@angular/material/paginator\";\r\n\r\n@Component({\r\n  selector: \"mat-paginator-goto\",\r\n  templateUrl: \"./mat-paginator-goto.component.html\",\r\n  styleUrls: [\"./mat-paginator-goto.component.css\"]\r\n})\r\nexport class MatPaginatorGotoComponent implements OnInit {\r\n  pageSize: number;\r\n  pageIndex: number;\r\n  length: number;\r\n  goTo: number;\r\n  pageNumbers: number[];\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @Input() disabled = false;\r\n  @Input() hidePageSize = false;\r\n  @Input() pageSizeOptions: number[];\r\n  @Input() showFirstLastButtons = false;\r\n  @Output() page = new EventEmitter<PageEvent>();\r\n  @Input(\"pageIndex\") set pageIndexChanged(pageIndex: number) {\r\n    this.pageIndex = pageIndex;\r\n  }\r\n  @Input(\"length\") set lengthChanged(length: number) {\r\n    this.length = length;\r\n    this.updateGoto();\r\n  }\r\n  @Input(\"pageSize\") set pageSizeChanged(pageSize: number) {\r\n    this.pageSize = pageSize;\r\n    this.updateGoto();\r\n  }\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit() {\r\n    this.updateGoto();\r\n  }\r\n\r\n  updateGoto() {\r\n    this.goTo = (this.pageIndex || 0) + 1;\r\n    this.pageNumbers = [];\r\n    for (let i = 1; i <= Math.ceil(this.length / this.pageSize); i++) {\r\n      this.pageNumbers.push(i);\r\n    }\r\n  }\r\n\r\n  paginationChange(pageEvt: PageEvent) {\r\n    this.length = pageEvt.length;\r\n    this.pageIndex = pageEvt.pageIndex;\r\n    this.pageSize = pageEvt.pageSize;\r\n    this.updateGoto();\r\n    this.emitPageEvent(pageEvt);\r\n  }\r\n\r\n  goToChange() {\r\n    this.paginator.pageIndex = this.goTo - 1;\r\n    const event: PageEvent = {\r\n      length: this.paginator.length,\r\n      pageIndex: this.paginator.pageIndex,\r\n      pageSize: this.paginator.pageSize\r\n    };\r\n    this.paginator.page.next(event);\r\n    this.emitPageEvent(event);\r\n  }\r\n\r\n  emitPageEvent(pageEvent: PageEvent) {\r\n    this.page.next(pageEvent);\r\n  }\r\n}\r\n\r\n/** Created by Sameer Khan **/\r\n","<div class=\"d-flex\">\r\n\t<mat-paginator [length]=\"length\" [pageIndex]=\"pageIndex\" [pageSize]=\"pageSize\" [pageSizeOptions]=\"pageSizeOptions\" (page)=\"paginationChange($event)\">\r\n\t</mat-paginator>\r\n\t<div class=\"go-to-container\">\r\n\t\t<div class=\"go-to-label\">Go To: </div>\r\n\t\t<mat-form-field>\r\n\t\t\t<mat-select [(ngModel)]=\"goTo\" (selectionChange)=\"goToChange()\">\r\n\t\t\t\t<mat-option *ngFor=\"let pageNumber of pageNumbers\" [value]=\"pageNumber\">{{pageNumber}}</mat-option>\r\n\t\t\t</mat-select>\r\n\t\t</mat-form-field>\r\n\t</div>\r\n</div>","import {Component, OnInit, ViewChild} from '@angular/core';\nimport { AbstractControl, FormArray, FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatTable, MatTableDataSource } from '@angular/material/table';\nimport { startWith, tap } from 'rxjs/operators';\n\nexport interface PeriodicElement {\n  name: string;\n  position: number;\n  weight: number;\n  symbol: string;\n}\n\nconst ELEMENT_DATA: PeriodicElement[] = [\n  {position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H'},\n  {position: 2, name: 'Helium', weight: 4.0026, symbol: 'He'},\n  {position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li'},\n  {position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be'},\n  {position: 5, name: 'Boron', weight: 10.811, symbol: 'B'},\n  {position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C'},\n  {position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N'},\n  {position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O'},\n  {position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F'},\n  {position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne'},\n  {position: 11, name: 'Neon', weight: 20.1797, symbol: 'Ne'},\n];\n\n/**\n * @title Basic use of `<table mat-table>`\n */\n@Component({\n  selector: 'app-table-basic-example',\n  templateUrl: './table-basic-example.component.html',\n  styleUrls: ['./table-basic-example.component.css']\n})\nexport class TableBasicExampleComponent implements OnInit {\n\n  displayedColumns: string[] = ['position', 'name', 'weight', 'symbol', 'action'];\n  dataSource = new MatTableDataSource<any>();\n \n isLoading = true;\n \n pageNumber: number = 1;\n   VOForm: FormGroup;\n   isEditableNew: boolean = true;\n   constructor(\n     private fb: FormBuilder,\n     private _formBuilder: FormBuilder){}\n \n   ngOnInit(): void {\n     this.VOForm = this._formBuilder.group({\n       VORows: this._formBuilder.array([])\n     });\n \n      this.VOForm = this.fb.group({\n               VORows: this.fb.array(ELEMENT_DATA.map(val => this.fb.group({\n                 position: new FormControl(val.position),\n                 name: new FormControl(val.name),\n                 weight: new FormControl(val.weight),\n                 symbol: new FormControl(val.symbol),\n                 action: new FormControl('existingRecord'),\n                 isEditable: new FormControl(true),\n                 isNewRow: new FormControl(false),\n               })\n               )) //end of fb array\n             }); // end of form group cretation\n     this.isLoading = false;\n     this.dataSource = new MatTableDataSource((this.VOForm.get('VORows') as FormArray).controls);\n     this.dataSource.paginator = this.paginator;\n \n     const filterPredicate = this.dataSource.filterPredicate;\n       this.dataSource.filterPredicate = (data: AbstractControl, filter) => {\n         return filterPredicate.call(this.dataSource, data.value, filter);\n       }\n \n       //Custom filter according to name column\n     // this.dataSource.filterPredicate = (data: {name: string}, filterValue: string) =>\n     //   data.name.trim().toLowerCase().indexOf(filterValue) !== -1;\n   }\n \n   @ViewChild(MatPaginator) paginator: MatPaginator;\n \n goToPage() {\n     this.paginator.pageIndex = this.pageNumber - 1;\n     this.paginator.page.next({\n       pageIndex: this.paginator.pageIndex,\n       pageSize: this.paginator.pageSize,\n       length: this.paginator.length\n     });\n   }\n   ngAfterViewInit() {\n     this.dataSource.paginator = this.paginator;\n     this.paginatorList = document.getElementsByClassName('mat-paginator-range-label');\n \n    this.onPaginateChange(this.paginator, this.paginatorList);\n \n    this.paginator.page.subscribe(() => { // this is page change event\n      this.onPaginateChange(this.paginator, this.paginatorList);\n    });\n   }\n   \n    applyFilter(event: Event) {\n     //  debugger;\n     const filterValue = (event.target as HTMLInputElement).value;\n     this.dataSource.filter = filterValue.trim().toLowerCase();\n   }\n \n \n   // @ViewChild('table') table: MatTable<PeriodicElement>;\n   AddNewRow() {\n     // this.getBasicDetails();\n     const control = this.VOForm.get('VORows') as FormArray;\n     control.insert(0,this.initiateVOForm());\n     this.dataSource = new MatTableDataSource(control.controls)\n     // control.controls.unshift(this.initiateVOForm());\n     // this.openPanel(panel);\n       // this.table.renderRows();\n       // this.dataSource.data = this.dataSource.data;\n   }\n \n   // this function will enabled the select field for editd\n   EditSVO(VOFormElement, i) {\n \n     // VOFormElement.get('VORows').at(i).get('name').disabled(false)\n     VOFormElement.get('VORows').at(i).get('isEditable').patchValue(false);\n     // this.isEditableNew = true;\n \n   }\n \n   // On click of correct button in table (after click on edit) this method will call\n   SaveVO(VOFormElement, i) {\n     // alert('SaveVO')\n     VOFormElement.get('VORows').at(i).get('isEditable').patchValue(true);\n   }\n \n   // On click of cancel button in the table (after click on edit) this method will call and reset the previous data\n   CancelSVO(VOFormElement, i) {\n     VOFormElement.get('VORows').at(i).get('isEditable').patchValue(true);\n   }\n \n \n paginatorList: HTMLCollectionOf<Element>;\n idx: number;\n onPaginateChange(paginator: MatPaginator, list: HTMLCollectionOf<Element>) {\n      setTimeout((idx) => {\n          let from = (paginator.pageSize * paginator.pageIndex) + 1;\n \n          let to = (paginator.length < paginator.pageSize * (paginator.pageIndex + 1))\n              ? paginator.length\n              : paginator.pageSize * (paginator.pageIndex + 1);\n \n          let toFrom = (paginator.length == 0) ? 0 : `${from} - ${to}`;\n          let pageNumber = (paginator.length == 0) ? `0 of 0` : `${paginator.pageIndex + 1} of ${paginator.getNumberOfPages()}`;\n          let rows = `Page ${pageNumber} (${toFrom} of ${paginator.length})`;\n \n          if (list.length >= 1)\n              list[0].innerHTML = rows; \n \n      }, 0, paginator.pageIndex);\n }\n \n \n   initiateVOForm(): FormGroup {\n     return this.fb.group({\n \n       position: new FormControl(234),\n                 name: new FormControl(''),\n                 weight: new FormControl(''),\n                 symbol: new FormControl(''),\n                 action: new FormControl('newRecord'),\n                 isEditable: new FormControl(false),\n                 isNewRow: new FormControl(true),\n     });\n   }\n\n}\n","<div class=\"mat-elevation-z8\">\n    <button><mat-icon (click)=\"AddNewRow()\" class=\"add-button\">add_box</mat-icon></button>\n    <br />\n    <mat-form-field style=\"width: 40%\">\n      <mat-label>Filter</mat-label>\n      <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Ex. ium\" #input>\n    </mat-form-field>\n    <mat-form-field style=\"width: 20%; float: right;\">\n      <mat-label>Go to Page</mat-label>\n      <input matInput type=\"number\" placeholder=\"Enter page number\" [(ngModel)]=\"pageNumber\" (ngModelChange)=\"goToPage()\">\n    </mat-form-field>\n    <form [formGroup]=\"VOForm\" autocomplete=\"off\">\n      <ng-container formArrayName=\"VORows\">\n        <table #table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n  \n          <!-- Position Column -->\n          <ng-container matColumnDef=\"position\">\n            <th mat-header-cell *matHeaderCellDef> No. </th>\n            <td mat-cell *matCellDef=\"let element; let i = index\" [formGroup]=\"element\">\n              <mat-form-field style=\"width: 70px;\">\n                <input matInput type=\"text\" formControlName=\"position\" [readonly]=\"true\">\n              </mat-form-field>\n          </ng-container>\n  \n          <!-- Name Column -->\n          <ng-container matColumnDef=\"name\">\n            <th mat-header-cell *matHeaderCellDef> Name </th>\n            <td mat-cell *matCellDef=\"let element; let i = index\" [formGroup]=\"element\">\n  \n              <!-- <span [hidden]=\"VOForm.get('VORows').value[i].isEditable\"> -->\n              <mat-form-field style=\"width: 70px;\">\n                <input matInput type=\"text\" formControlName=\"name\" [readonly]=\"VOForm.get('VORows').value[i].isEditable\">\n              </mat-form-field>\n              <!-- </span> -->\n  \n            </td>\n          </ng-container>\n  \n          <!-- Weight Column -->\n          <ng-container matColumnDef=\"weight\">\n            <th mat-header-cell *matHeaderCellDef> Weight </th>\n            <td mat-cell *matCellDef=\"let element; let i = index\" [formGroup]=\"element\">\n              <!-- [appearance]=\"true ? 'outline': 'fill'\" -->\n              <!-- <span [hidden]=\"VOForm.get('VORows').value[i].isEditable\"> -->\n              <mat-form-field style=\"width: 70px;\">\n                <input matInput type=\"text\" formControlName=\"weight\" [readonly]=\"VOForm.get('VORows').value[i].isEditable\">\n              </mat-form-field>\n              <!-- </span> -->\n            </td>\n          </ng-container>\n  \n          <!-- Symbol Column -->\n          <ng-container matColumnDef=\"symbol\">\n            <th mat-header-cell *matHeaderCellDef> Symbol </th>\n            <td mat-cell *matCellDef=\"let element; let i = index\" [formGroup]=\"element\">\n              <!-- <span [hidden]=\"VOForm.get('VORows').value[i].isEditable\"> -->\n              <mat-form-field style=\"width: 70px;\">\n                <input matInput type=\"text\" formControlName=\"symbol\" [readonly]=\"VOForm.get('VORows').value[i].isEditable\">\n              </mat-form-field>\n              <!-- </span> -->\n            </td>\n          </ng-container>\n  \n          <ng-container matColumnDef=\"action\">\n            <th mat-header-cell *matHeaderCellDef> Action </th>\n            <td mat-cell *matCellDef=\"let element; let i = index\" [formGroup]=\"element\">\n              <button mat-icon-button class=\"material-icons app-toolbar-menu save-button\"\n                                      matTooltip=\"Save Changes\" (click)=\"SaveVO(VOForm,i)\"\n                                      *ngIf=\"!VOForm.get('VORows').value[i].isEditable\" color=\"primary\">\n                                      <mat-icon>check_circle</mat-icon>\n                                  </button>\n  \n              <button mat-icon-button class=\"material-icons app-toolbar-menu cancel-button\"\n                                      matTooltip=\"Cancel Changes\" color=\"warn\"\n                                      (click)=\"CancelSVO(VOForm,i)\"\n                                      *ngIf=\"!VOForm.get('VORows').value[i].isEditable\">\n                                      <mat-icon>cancel</mat-icon>\n                                  </button>\n  \n              <button mat-icon-button class=\"material-icons app-toolbar-menu save-button\"\n                                      *ngIf=\"VOForm.get('VORows').value[i].isEditable\"\n                                      matTooltip=\"Edit\" color=\"primary\" (click)=\"EditSVO(VOForm,i)\">\n                                      <mat-icon>edit</mat-icon>\n                                  </button>\n  \n              <button mat-icon-button class=\"material-icons app-toolbar-menu delete-button\"\n                                      *ngIf=\"VOForm.get('VORows').value[i].isEditable\"\n                                      matTooltip=\"Delete\" color=\"warn\">\n                                      <mat-icon>delete</mat-icon>\n                                  </button>\n            </td>\n          </ng-container>\n  \n          <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n          <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n  \n          <!-- Row shown when there is no matching data. -->\n          <tr class=\"mat-row\" *matNoDataRow>\n            <td class=\"mat-cell\" colspan=\"4\">No data matching the filter \"{{input.value}}\"</td>\n          </tr>\n        </table>\n      </ng-container>\n    </form>\n    <mat-card *ngIf=\"isLoading\" style=\"display: flex; justify-content: center; align-items: center\">\n    <mat-progress-spinner \n      color=\"primary\" \n      mode=\"indeterminate\">\n    </mat-progress-spinner>\n  </mat-card>\n  \n    <!-- <mat-paginator-goto [length]=\"100\" [pageIndex]=\"0\" [pageSize]=\"10\" [pageSizeOptions]=\"[5, 10, 25, 100]\"\n          (page)=\"paginationChange($event)\"></mat-paginator-goto> -->\n    <mat-paginator [pageSizeOptions]=\"[5 ]\" showFirstLastButtons>\n    </mat-paginator>\n  </div>","import {HttpClientModule} from '@angular/common/http';\r\nimport {NgModule} from '@angular/core';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport {MatNativeDateModule} from '@angular/material/core';\r\nimport {BrowserModule} from '@angular/platform-browser';\r\nimport {platformBrowserDynamic} from '@angular/platform-browser-dynamic';\r\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\r\nimport {DemoMaterialModule} from './app/material-module';\r\nimport {MAT_FORM_FIELD_DEFAULT_OPTIONS} from '@angular/material/form-field';\r\nimport {TableBasicExampleComponent} from './app/table-basic-example/table-basic-example.component';\r\nimport { DisableControlDirective } from './app/disabled-form';\r\nimport { MatPaginatorGotoComponent } from './app/mat-paginator-goto/mat-paginator-goto.component';\r\n\r\n\r\n// Default MatFormField appearance to 'fill' as that is the new recommended approach and the\r\n// `legacy` and `standard` appearances are scheduled for deprecation in version 10.\r\n// This makes the examples that use MatFormField render the same in StackBlitz as on the docs site.\r\n@NgModule({\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    DemoMaterialModule,\r\n    MatNativeDateModule,\r\n    ReactiveFormsModule,\r\n  ],\r\n  entryComponents: [TableBasicExampleComponent],\r\n  declarations: [TableBasicExampleComponent,\r\n  DisableControlDirective, MatPaginatorGotoComponent],\r\n  bootstrap: [TableBasicExampleComponent],\r\n  providers: [\r\n    { provide: MAT_FORM_FIELD_DEFAULT_OPTIONS, useValue: { appearance: 'fill' } },\r\n  ]\r\n})\r\nexport class AppModule {}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n\r\n\r\n/**  Copyright 2020 Google LLC. All Rights Reserved.\r\n    Use of this source code is governed by an MIT-style license that\r\n    can be found in the LICENSE file at http://angular.io/license */","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}